#!/usr/bin/env node
'use strict';

const Bossy = require('@hapi/bossy');
const Confidence = require('../');

const internals = {};

internals.run = async () => {

    const args = Bossy.parse(internals.definition);

    if (args instanceof Error) {
        console.error(args.message);
        return process.exit(1);
    }

    if (args.help) {
        console.log(Bossy.usage(internals.definition, 'confidence -c config.json [--filter.criterion=value]'));
        return process.exit(0);
    }

    try {
        const config = require(args.config);
        const store = config instanceof Confidence.Store ? config : new Confidence.Store(config);
        const result = store.get('/', args.filter);
        process.stdout.write(JSON.stringify(result, null, args.indentation));
    }
    catch (err) {
        console.error('Failed loading configuration file: ' + args.config + ' (' + err + ')');
        process.exit(1);
    }
};


internals.definition = {
    h: {
        type: 'help',
        alias: 'help'
    },
    c: {
        type: 'string',
        require: true,
        alias: 'config'
    },
    i: {
        type: 'number',
        alias: 'indentation',
        default: 4
    },
    filter: {
        type: 'json',
        parsePrimitives: true,
        default: {}
    }
};


internals.run();
